class Solution {
    public int recur(int i , int j , List<List<Integer>> triangle , int[][] dp){
        if(i ==  triangle.size())
             return 0;

        if(dp[i][j] != -1)
           return dp[i][j];

        int down = recur(i + 1 , j , triangle , dp);
        int downToRight = recur(i + 1, j + 1 , triangle , dp);

        return dp[i][j] = triangle.get(i).get(j) + Math.min(down , downToRight);
    }
    public int minimumTotal(List<List<Integer>> triangle) {
        int m = triangle.size();
        int n = triangle.get(m - 1).size();
        int dp[][] = new int[m][n];
        for(int arr[] : dp)
           Arrays.fill(arr , -1);
        return recur(0 , 0 , triangle , dp);
    }
}
